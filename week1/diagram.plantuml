@startuml walls_and_bouncing

class Shape {
  # sf::Color color;
  # sf::Vector2f position;
  # sf::Vector2f size;
  # sf::Shape * body;
  + virtual void draw()
}

class Square {
  + void draw() override
  + void handle_input(const sf::Window & window);
  - sf::Vector2f Vector2i_to_Vector2f(const sf::Vector2i & target);
  - void move(const sf::Vector2f & delta);
  - void jump(const sf::Vector2f & target);
  - void jump(const sf::Vector2i & target);
}

class Ball {
  - float size
  - float direction
  - float velocity
  - float move_x
  - float move_y
  + void draw() override
  - sf::Vector2f calculate_next_position()
}

class Wall {
  + void draw() override
}

class Collider {
  - sf::Shape body
}

class sf::Shape {

}

Shape <|-- Square
Shape <|-- Ball
Shape <|-- Wall
sf::Shape --o Shape
Collider --o Ball
@enduml